# Runs tests and verifies that the package can be built.
name: Test

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_call:
    inputs:
      branch:
        description: 'Target branch'
        default: ${{ github.event.release.target_commitish }}
        type: string
      version:
        description: 'Released version'
        default: ${{ github.event.release.tag_name }}
        type: string
      notes:
        description: 'Release notes'
        default: ${{ github.event.release.body }}
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    runs-on: ${{matrix.operating-system}}
    strategy:
      fail-fast: false
      matrix:
        # operating-system: [ubuntu-latest]
        operating-system: [ubuntu-22.04, ubuntu-20.04]
        # php-versions: ['5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3', '8.3']
        php-versions: ['8.1', '8.2', '8.3']
    name: build and test using PHP ${{ matrix.php-versions }} with ${{ matrix.operating-system }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve the secret, decode and import GPG key
        run: |
          echo "$GPG_KEY====" | tr -d '\n' | fold -w 4 | sed '$ d' | tr -d '\n' | fold -w 76 | base64 -di | gpg --batch --import || true
          gpg --list-secret-keys --keyid-format=long
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Configure Git gpg
        if: false
        run: |
          git config --local user.email "$GIT_COMMITTER_EMAIL"
          git config --local user.name "$GIT_COMMITTER_NAME"
          git config --local pull.rebase true
          git config commit.gpgsign true
          git config user.signingkey $GPG_KEY_ID
        env:
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ github.repository_owner }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Set up PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl #optional
          ini-values: "post_max_size=256M" #optional

      - name: Install dependencies
        run: |
          packageName=$(cat composer.json | jq -r '.name')
          echo "Package: $packageName"
          mkdir -p /tmp/test
          cd /tmp/test
          composer require $packageName

      - name: Setup Node.js
        if: false
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          check-latest: true

      - name: Install NPM dependencies
        if: false
        run: npm install

      - name: Compile assets for production
        if: false
        run: npm run build

      - name: Push to repository
        if: false
        run: |
          if [ "$(git status --porcelain=v1 2>/dev/null | wc -l)" != "0" ]; then
            # git add src/debian/control
            git commit -m "Update packages from ${{ matrix.operating-system }} at $(date +'%d-%m-%y')" &&
              # git push https://${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main ||
              git push ||
              git stash &&
              git pull --rebase &&
              git stash apply &&
              # git push https://${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main || true
              git push || true
          fi
