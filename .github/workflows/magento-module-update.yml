name: Magento Module update
on:
  workflow_call:
    inputs:
      branch:
        description: 'Target branch'
        default: ${{ github.event.release.target_commitish }}
        type: string
      version:
        description: 'Released version'
        default: ${{ github.event.release.tag_name }}
        type: string
      notes:
        description: 'Release notes'
        default: ${{ github.event.release.body }}
        type: string
    secrets:
      GPG_KEY:
        required: true
      GPG_KEY_ID:
        required: true
      GIT_COMMITTER_EMAIL:
        required: true
      SSH_ID_RSA:
        required: true
jobs:
  magento-module-load:
    runs-on: ubuntu-latest
    outputs:
      m2module: ${{ steps.m2module.outputs.m2module }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate matrix data
        id: m2module
        shell: bash
        run: |
          pkgs=$(ls -l app/code/Diepxuan | grep '^d' | awk '{print $NF}' | while read dir; do echo $dir; done)
          json=$(printf '%s\n' "${pkgs}" | jq -R . | jq -s -c .)
          echo "m2module=$json" >> "$GITHUB_OUTPUT"
  magento-module-build:
    runs-on: ubuntu-latest
    needs: magento-module-load
    strategy:
      matrix:
        m2module: ${{ fromJSON(needs.magento-module-load.outputs.m2module) }}
    name: Test and Build ${{ matrix.m2module }} module
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check
        run: |
          echo $GIT_COMMITTER_EMAIL
          echo $GIT_COMMITTER_NAME
          echo $GPG_KEY
          echo $GPG_KEY_ID
        env:
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ github.repository_owner }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: SSH configuration
        shell: bash
        run: |
          mkdir -p ~/.ssh
          [[ ! -f "~/.ssh/id_rsa" ]] && echo "$SSH_ID_RSA" > ~/.ssh/id_rsa || (echo "$SSH_ID_RSA" > ~/.ssh/id_rsa_work && ssh-add ~/.ssh/id_rsa_work)
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/*
        env:
          SSH_ID_RSA: ${{ secrets.SSH_ID_RSA }}

      - name: Git configuration
        run: |
          echo "$GPG_KEY====" | tr -d '\n' | fold -w 4 | sed '$ d' | tr -d '\n' | fold -w 76 | base64 -di | gpg --batch --import || true
          gpg --list-secret-keys --keyid-format=long
          git config --global user.email "$GIT_COMMITTER_EMAIL"
          git config --global user.name "$GIT_COMMITTER_NAME"
          git config --global commit.gpgsign true
          git config --global user.signingkey $GPG_KEY_ID
        env:
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ github.repository_owner }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Checkout module
        shell: bash
        working-directory: app/code/Diepxuan/${{ matrix.m2module }}
        run: |
          pkgName=$(cat composer.json | jq -r '.name')
          git init
          git remote add origin git@github.com:$pkgName.git
          git fetch -ap
          git stash
          git checkout main
          git stash apply
          git add .
          git status